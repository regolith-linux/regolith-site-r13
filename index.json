[{"body":"Based on your preferred installation method, follow one of the following two sections to install Regolith:\nOption 1: Ubuntu Installer  Download an ISO image  (both the Ubuntu LTS 18.04 and most recent 19.10 bases are available) and then use an OS installation tool such as USB Creator to write the downloaded file into a USB device. Here are Ubuntu guides for performing this action in Windows, Mac, and Ubuntu. Reboot the computer and select the USB flash drive to boot from. Install or run the live environment by providing information when prompted during the setup process. See this tutorial to learn more about the installation process. When prompted, reboot the computer and login to your new Regolith environment!  Option 2: PPA  See below about PPA sources, and add your chosen PPA to your system:   $ sudo add-apt-repository ppa:regolith-linux/release  Install the Regolith desktop package:   $ sudo apt install regolith-desktop  Reboot the computer, and when logging in select the \u0026ldquo;Regolith\u0026rdquo; session in the gear menu (⚙️):  Reinstallation In the case that the Regolith desktop environment becomes corrupted or otherwise unbootable, follow these steps to reset it. No user files will be removed as part of this process:\n Login to the stock Ubuntu session. If this session is not available, install it with sudo apt install ubuntu-session. If you are unable to login, type ctrl alt F2 to access a TTY. After installing ubuntu-session, you will have the option to select the Ubuntu session type in the login screen. Uninstall Regolith from within the Ubuntu session:  $ sudo apt remove regolith-* $ sudo apt autoremove Verify that no regolith packages are still installed with apt list --installed | grep -i regolith. The command should not return any packages. If it does, manually uninstall them with sudo apt remove \u0026lt;package\u0026gt;. Reinstall Regolith:  $ sudo apt install regolith-desktop Reboot the computer, and when logging in select the \u0026ldquo;Regolith\u0026rdquo; session in the gear menu. At this point you can remove or keep ubuntu-session.  Uninstallation of regolith-desktop Simply follow these steps to remove Regolith from your system:\n Log out of the Regolith session and into the default Ubuntu session. Open a terminal and run:  $ sudo apt remove regolith-desktop regolith-st \u0026amp;\u0026amp; sudo apt autoremove Now remove the PPA:  $ sudo add-apt-repository --remove ppa:regolith-linux/release To restore your GNOME settings, run:  $ source ~/.regolith-gnome-backup You can safely delete the file ~/.config/regolith.  PPA Sources There are 4 sources for Regolith packages for release 1.3. The release PPA is recommended for most users, but another may be better for you based on your needs. Here is a description of each PPA.\n   Name PPA URI Freshness Stability Description     Unstable ppa:regolith-linux/unstable Very High Low The unstable PPA is recommended for project developers and anyone that's alright with troubleshooting their own system and doesn't mind some problems from time to time.   Stable ppa:regolith-linux/stable High Medium The stable PPA is for those that would like the latest features, even between official releases.   Release ppa:regolith-linux/release Low High The release PPA provides bug fixes as they occur and feature updates upon release.   r1.3 ppa:regolith-linux/r1.3 Very Low Very High The r1.3 PPA is locked to the 1.3 release and will not be updated except for critical bug fixes.    ","excerpt":"Based on your preferred installation method, follow one of the following two sections to install …","ref":"http://regolith-linux.org/regolith-site-r13/docs/getting-started/install/","title":"Installation"},{"body":"   Action Key Binding     Launch Terminal ⊞ Win-Enter   Launch Browser ⊞ Win-Shift-Enter   App Launcher ⊞ Win-Space   Command Launcher ⊞ Win-Shift-Space   Launch File Browser ⊞ Win-Shift-n   Window Navigate ⊞ Win-Ctrl-Space   Move between Windows ⊞ Win-Arrow Keys or vim keys   Move Windows ⊞ Win-Shift-Arrow Keys or vim keys   Toggle Vertical and Horizontal Layout Mode ⊞ Win-Backspace   Focused Window Fullscreen Toggle ⊞ Win-f   Focused Window Float Toggle ⊞ Win-Shift-F   Toggle Keybinding Helper ⊞ Win-Shift-?   Toggle the bar ⊞ Win-i   Focused Window Floating Toggle ⊞ Win-Shift-F   Move to Workspace 1 - 10 ⊞ Win-1 - 0   Move to Workspace 10 - 19 ⊞ Win-Ctrl-1 - 9   Take to Workspace 1 - 10 ⊞ Win-Alt-1 - 0   Take to Workspace 10 - 19 ⊞ Win-Ctrl-Alt-1 - 9   Move to Next Workspace ⊞ Win-Tab   Move to Previous Workspace ⊞ Win-Shift-Tab   Layout Toggle (tabbed, horizontal, vertical) ⊞ Win-t   Reload i3 Config ⊞ Win-Shift-C   Control Panel ⊞ Win-c   Configure Bluetooth ⊞ Win-b   Configure Wifi ⊞ Win-w   Enter Window Resize Mode ⊞ Win-r   Change Window Size in Resize Mode ⊞ Win-arrow keys   Increase or Decrease Window Gaps in Resize Mode + and -   Exit Resize Mode Escape or Enter   Kill Focused Window ⊞ Win-Shift-q   Close Terminal Ctrl-d   Close (Some) Windows Ctrl-w   Exit (Some) Apps Ctrl-q   Exit Session ⊞ Win-Shift-E   Suspend Computer ⊞ Win-Shift-S   Reboot Computer ⊞ Win-Shift-B   Power Off Computer ⊞ Win-Shift-P    ","excerpt":"Action Key Binding     Launch Terminal ⊞ Win-Enter   Launch Browser ⊞ Win-Shift-Enter   App Launcher …","ref":"http://regolith-linux.org/regolith-site-r13/docs/reference/keybindings/","title":"Keybindings"},{"body":"Looks provided by Regolith have the package prefix regolith-look-. For example, another look sporting the Solarized color palette and a different GTK theme and icon set is called regolith-look-solarized-dark.\nFinding Looks All look packages using this naming scheme can be found via the following command:\n$ apt list | grep regolith-look Installing a Look Looks can be installed via the apt tool or with any tool that can install Debian packages on the system, such as synaptic. For example, this command will install the Ubuntu look:\n$ sudo apt install regolith-look-ubuntu If you pay attention to the output of apt you may notice that in addition to installing the look, fonts-font-awesome will also be installed. As a feature, looks are able to depend on any resources or artifacts they require as packages. This ensures that once a look is installed, the user does not need to care about what other things that look make require to function properly. It's taken care of by the package manager.\nSwitching to a Look Once a look has been installed, a utility command called regolith-look can be used to enable it. To enable the ubuntu look installed in the previous step, try the following:\n$ regolith-look set ubuntu $ regolith-look refresh The command will mention that it created a file in your user directory. This file is an Xresource file, and it's stored in a specific path such that i3-gnome-flashback will look for it upon session start. Let's have a look at the file:\n$ cat ~/.Xresources-regolith #include \u0026#34;/etc/regolith/styles/ubuntu/root\u0026#34; In essence, our Xresource file is simply pointing to another Xresource file. Lets look there:\n$ cat /etc/regolith/styles/ubuntu/root ! -- Styles - Colors #include \u0026#34;/etc/regolith/styles/ubuntu/color\u0026#34; ! -- Styles - Fonts #include \u0026#34;/etc/regolith/styles/ubuntu/typeface\u0026#34; ! -- Styles - Theme #include \u0026#34;/etc/regolith/styles/ubuntu/theme\u0026#34; ! -- Applications ! These files map values defined above into specific app settings. #include \u0026#34;/etc/regolith/styles/st-term\u0026#34; #include \u0026#34;/etc/regolith/styles/i3-wm\u0026#34; #include \u0026#34;/etc/regolith/styles/i3xrocks\u0026#34; #include \u0026#34;/etc/regolith/styles/rofi\u0026#34; #include \u0026#34;/etc/regolith/styles/gnome\u0026#34; Here we can see that there are separate Xresource files that define color, typeface and theme (icon, GTK), and these are loaded and then applied to the UI components integrated by Regolith: st (terminal), i3-wm, i3xrocks, rofi, and GNOME.\nRefreshing a Look There may be times that the UI of the system and the Regolith look get out of sync. For example, if a program sets the wallpaper or icon theme externally, this will not be reflected in the Xresource settings. Regolith will only update itself upon login if it detects of Xresource changes have been made. If you wish to force Regolith to reload the UI based on the Xresource settings, run:\n$ regolith-look refresh Learning More To dig deeper, read about Styles in the following page and have a look at the regolith-styles README.\n","excerpt":"Looks provided by Regolith have the package prefix regolith-look-. For example, another look …","ref":"http://regolith-linux.org/regolith-site-r13/docs/customize/look/","title":"Look"},{"body":"Regolith is a collection of open source components that together form a desktop environment. Many of the UI components that are used to build Regolith are independent open source projects that have simply been integrated, packaged, and configured for a specific workflow and visual aesthetic. Most computer desktop environments are optimized for ease-of-use and familiarity with commercial operating systems such as Microsoft Windows or Apple's OS X. In contrast, Regolith provides a way of interacting with a computer that is optimized for user productivity and does not attempt to mimic legacy UI paradigms for familiarity.\nThe Keyboard, the Mouse, and the Monitor Regolith places emphasis on the keyboard input device over the mouse, in relation to most other desktop environments. This is for one reason: productivity. Specifically, the amount of time it takes to press a keybinding on the keyboard is less than the amount of time it takes your hand to move from the keyboard to the mouse, execute a series of clicks to get to a desired action, and then get your hands back on the keyboard. While this time difference is small, it adds up quickly due to frequent interactions.\nBut this benefit comes with a one-time cost: learning the keybindings. In exchange for this up-front cost, the user is subsequently able to perform general computer actions faster and with less foreground thought. Additionally, by pushing more of the computer actions into the user's memory, more of the computer's visual interface can be devoted to the user's applications. Put another way, the Regolith interface devotes more bandwidth to the user's application and less to the general management of the computer. And because ultimately the productive output of the user is a result of interaction with applications, the general productivity of the user is increased. This is a subjective benefit, and may be more or less important to the user.\nTiling Windows Perhaps the most user-impacting component in Regolith is the window manager, an open source project called i3-gaps (which is a customization of i3-wm). This program organizes windows into tiles. By default, i3-gaps divides the screen into sections for each window, all of which add up to the entire screen. If only one program is presenting a window, then that window occupies the entire screen. For two windows, both get an equal portion of the screen, and so on. By using keybindings, the user can tell i3-gaps to resize, move, and otherwise organize windows in other ways. A key advantage to this approach is that the user is freed from micro managing window layouts (at the cost of having to learn the keybindings).\nLaunching Applications It is common for desktop environments to display application launchers throughout the user interface, in the form of icons and text. Folders, docks, and context menus are used to present a form of menu to the user. Despite them appearing visually different, they are have one function: to launch an application. As with keybindings, in Regolith this user interface of launching apps is refined and minimized. Desktop icons, panels, and docks are not used. Rather, the user invokes the application launcher which presents a menu of applications sorted by frequency of usage. The user may begin typing the name or function of the application they intend to load and the list is filtered accordingly. In addition, frequently used applications such as terminal and browser have specific keybindings. With this UI treatment, there is no fixed overhead on the display for the presentation of application launchers. This provides the user benefit of more screen space devoted to the user's applications.\nSystem Management Modern computers are complex machines with many observable attributes. For the day-to-day operation however, most of these can be ignored. Each user has a specific subset of system state they care about, and so there is no one perfect configuration for every user. By default Regolith provides on-screen state information on the bar for the user's workspaces, keybindings help, network and CPU utilization, notifications, and the system time. More or less items can be configured by the user as needed.\nIn addition to the transient system information provided on the bar, the system configuration can be changed by the user via the Settings application. This configuration system is part of GNOME, and provides a rich set of UI pages to configure WiFi networks, Bluetooth devices, displays, and other devices.\nConfiguration Files While most of the common tasks of system management and administration are handled by graphical interfaces such as Settings, lower-level configuration is done by editing configuration files that are installed as part of Regolith. For example, to change what information is presented on the bar, or to tweak the border width of windows, editing configuration files is required. These customizations are covered in the customization section.\nWhere next?  Getting Started: Get started with Regolith The Interface: Understand how to perform actions in Regolith Keybindings: Learn the keybindings  ","excerpt":"Regolith is a collection of open source components that together form a desktop environment. Many of …","ref":"http://regolith-linux.org/regolith-site-r13/docs/overview/","title":"Overview"},{"body":"There is nothing in Regolith Linux itself that collects any user data, either anonymously or otherwise. Because Regolith is a customization of Ubuntu Linux, any data collection that Ubuntu is doing will also be performed by Regolith Linux. This website has vanilla Google Analytics integration. Anonymity is a feature.\n","excerpt":"There is nothing in Regolith Linux itself that collects any user data, either anonymously or …","ref":"http://regolith-linux.org/regolith-site-r13/docs/policy-and-process/privacy/","title":"Privacy"},{"body":"Following R1.2, the 1.3 release focused on usability issues reported by users and a continuing refinement of the desktop environment in general, with a focus on making the system easier for those inexperienced with tiling window managers.\nFeatures   Cahuella GTK Theme  A new GTK theme was created for Regolith that more closely follows the standard GNOME theme, Adwaita.   Keybindings Dialog  To allow for a more consistent look and collapsible content for various monitor dimensions, a custom shortcut dialog was developed called Remontoire.   Pluggable Compositors  The subsystem providing visual effects, the compositor, can behave differently based on hardware and driver support. Regolith now packages 3 compositor backends: compton-glx (based on Picom), xcompmgr, and none.   i3-snapshot  In office environments it is common to switch between various display configurations (desk, meeting room...). i3-snapshot allows the user to quickly save and restore existing window layouts in a session.   New Rofi theme  Based on work by /u/InfernusZ9, the Rofi launcher is less distracting.   New notification UI based on Rofication  The previous notification UI was a hold over from more traditional desktop environments that prefer to present an on-screen dialog when a notification is received. Because user-focus is paramount, this was changed such that an indicator in the bar displays the number of unread notifications and the user decides when to view them via a keybinding or button click.   Floating Control Panel  The gnome-control-center app can have a hard time adapting to constrained tiled layouts common with i3-wm. Now when the control panel is loaded, it floats above the existing windows to allow for a quick settings change without impacting other apps.   Clickable Bar Status Actions  For convienence, the default blocks on the bar will launch configuration apps for the associated block. For example, the battery block will launch the power settings control panel, and the notification block will launch the notification viewer.   Discrete and packagable Looks  The underlying style framework used by Regolith has been revamped to allow for \"looks\": colors, themes, typeface, and other thematic state. Looks can be switched with a single command.   New bar status components  Network, keybindings, notifications, focused window, and other blocklets have been improved and added.   Build System  Build scripts were added and improved to allow for the generation of Regolith packages in an automated fashion, making it easier for others to roll their own.   Website  An entirely new website is launching with R1.3, to integrate more content and make it faster for users to find information.    Fixes  i3-gaps-wm: Fix for workspace label bug on startup. Revamping some keybindings based on user feedback. i3xrocks: numerous tweaks and fixes for status indicators. regolith-gnome-flashback: numerous fixes and policy enhancements to session management.  ISO Generation The following commands were applied via the Cubic tool to the stock Ubuntu 18.04 and 19.10 installer images to generate the Regolith Install ISO:\n$ sudo add-apt-repository universe \u0026amp;\u0026amp; sudo add-apt-repository ppa:regolith-linux/release $ sudo apt remove aisleriot branding-ubuntu cheese* gnome-mahjongg gnome-sudoku gnome-mines gnome-todo* gnome-video-* libchees* libgnome-games* libreoffice* remmina* rhythmbox* shotwell* thunderbird* totem* ure ubuntu-session ubuntu-web-launchers $ apt install regolith-desktop regolith-gdm3-theme $ sudo apt autoremove $ cp /usr/share/backgrounds/lucas-bellator-C0OD8OM-oM0-unsplash.jpg /usr/share/backgrounds/warty-final-ubuntu.png The purpose of removing several packages such as games and libreoffice was to reduce the ISO size. All packages removed in the ISO are installable via the apt tool or via the Ubuntu app store.\n","excerpt":"Following R1.2, the 1.3 release focused on usability issues reported by users and a continuing …","ref":"http://regolith-linux.org/regolith-site-r13/docs/reference/releases/regolith-1.3-release-notes/","title":"Regolith 1.3 Release Notes"},{"body":"Regolith uses a number of files in /etc/regolith to determine the behavior and look of various components. While it's possible to simply edit these files directly, users who do so run the risk of having their configurations overwritten upon future updates. The Debian packaging system should ask users if they wish to take updates or keep the existing files, but this may have unintended side effects if users take partial updates of files. As such Regolith, upon login, will look for user-staged version of configuration files and load those instead of the defaults if they exist. This is recommended over editing the files in /etc/regolith directly as it gives the user more control over their configuration. This page describes how to create these files.\nDepending on what you wish to change, you may need your own copy if the i3 config file, Xresources, or both. If you're looking to change the way Regolith looks, Xresources may be all you need. If you want to update or add keybindings or swap out components, you'll most likely need to stage the i3 config file.\ni3 Config  Copy the default Regolith i3 config file into your home directory:  $ mkdir -p ~/.config/regolith/i3 $ cp /etc/regolith/i3/config ~/.config/regolith/i3/config Log out and back in. The Regolith session will automatically detect your user-staged file and use that over the default in /etc/regolith/i3.  Verify the Change  Verify by running i3 --moreversion and noting the config file that is printed as a result. It should be the copy you just created. If not, be sure the path is correct. It must exactly be ~/.config/regolith/i3/config for Regolith to load it.  Regolith Styles  Copy the root Regolith Xresource file into your home directory:  $ cp /etc/regolith/styles/root ~/.Xresources-regolith Log out and back in. The Regolith session will automatically detect your user-staged file and use that over the default in /etc/regolith/styles.  Note that this root file is simply a reference to other styles that are broken down by the thing they are designed to style. For example, if you wish to customize the look of i3, you will need to also copy /etc/regolith/styles/i3-wm into your user directory and then update the reference to the new file in your ~/.Xresources-regolith.\n","excerpt":"Regolith uses a number of files in /etc/regolith to determine the behavior and look of various …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/stage-configs/","title":"Stage config files"},{"body":"As mentioned in the Getting Started section, super space causes i3 to execute Rofi to present a list of apps. Once launched, the application selected will open a window on the currently active workspace. If other windows are already present on this workspace, they will be resized to allow the new window to also be placed without overlapping or otherwise obstructing the existing windows.\nWindow Layout super backspace can be used to toggle between horizontal and vertical layout modes, which will apply to the next launched application. In this way, windows in a workspace can divide the screen into portions relative to the desired importance of the user.\nIn addition to toggling layout orientation, existing windows can be moved relative to their neighbors with super shift ↑ ↓ ← → (arrow keys) or VIM-style arrow keys k j h l. Or, super tab and super shift tab can be used to move back and forth between active workspaces.\nWindows can also be directly moved to other workspaces. The bar will indicate all active workspaces as well as the currently focused workspace. super shift [0-9] will cause the currently focused window to be moved to the workspace number selected.\nUsers can navigate to windows via super [0-9] but can also directly navigate to a specific window with super ctrl space.\nQuit an Application. Unfortunately in Linux there is no convention that all applications follow for how to quit. In traditional desktop environments, users often rely on the close box of the window or a global menu system. Because Regolith has a reduced UI, depending on the application these common mouse-driven ways of exiting apps may not be available. Depending on the app, one of the following keybindings may cause it to exit:\n ctrl w ctrl W ctrl q ctrl Q ctrl d alt F4  If none of these commands work, it may be that the application has crashed and is not responding to requests from the window manager. In this case you can kill the focused application with super shift q\n","excerpt":"As mentioned in the Getting Started section, super space causes i3 to execute Rofi to present a list …","ref":"http://regolith-linux.org/regolith-site-r13/docs/interface/apps/","title":"Working with Applications"},{"body":"While we'll cover everything in greater detail in other areas of the documentation, this page covers the very basics.\nThe Super Key Most keybindings you'll be using with Regolith start with the super key. This key typically says \u0026ldquo;WIN\u0026rdquo; or has a MS Windows logo on it. On a Mac it is the Command ⌘ key. Going forward, this key will simply be referred to as super but keep in mind that you can change which physical button super maps to in your configuration if you choose to.\nLaunch an Application After logging in, you'll be at a blank screen with the bar at the bottom and some keyboard shortcuts on the right. To launch an application, press super space and a menu will be presented with all of the applications installed on the system. If you begin typing the name of the application you wish to launch, the list will filter down to only matching names. You can also scroll through the list with the arrow keys.\nTerminal The terminal is a special application that has it's own keybinding, super enter.\nBrowser The preferred browser is also special, and can be launched with super shift enter.\nQuit an Application. super shift q will send the kill signal to the focused application. Additionally, depending on the app, one of the following keybindings may cause it to exit:\n ctrl w ctrl W ctrl q ctrl Q ctrl d alt F4  Switching Workspaces A primary way of managing how applications occupy the screen is by the usage of workspaces. A workspace is in essence a group of zero or more applications that all present windows on the same physical display. Users can switch workspaces to \u0026ldquo;gain\u0026rdquo; more space for applications to occupy. Windows can be moved across workspaces. Workspaces can be tied to physical display or be moved to other displays as needed. To switch workspaces, hold down the super key and press one of the number keys. This will navigate to that workspace. If any windows exist in a given workspace, it will show in the bar as being active. Thus, by referring to the bar the user can known of which workspaces active applications live.\nConfiguring the System The Settings app (also known as gnome-control-center) is the primary interface for common configuration tasks, such as changing the desktop wallpaper, configuring wifi and bluetooth, configuring app associations, and setting up users. This app can be launched via the super c keybinding or from the Launcher via the Settings app.\nFurther Reading More keybindings are listed in Remontoire, the shortcut application. This app is loaded automatically on the first session, but not on successive logins. The window can be toggled at any time by clicking the circled i icon in the bar, or pressing super shift ?.\n","excerpt":"While we'll cover everything in greater detail in other areas of the documentation, this page covers …","ref":"http://regolith-linux.org/regolith-site-r13/docs/getting-started/basics/","title":"Basics"},{"body":"Depending on your preference (or keyboard), you may prefer a key other than Super to be used as the primary i3 keybinding. Follow these steps to update your i3 configuration:\n Stage your own i3 config file (tutorial), then open ~/.config/regolith/i3/config in your editor of choice. The first non-comment line should read set $mod Mod4 . Replace Mod4 with Mod1 for alt or check here for other options. If you've just staged your i3 config file, you'll need to log back in to have the changes take effect. This only needs to happen once though, and so if you've already made a copy previously and logged in since, just reload i3 with ⊞ Win-shift-r.  ","excerpt":"Depending on your preference (or keyboard), you may prefer a key other than Super to be used as the …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/super-to-alt/","title":"Change the super key mapping"},{"body":"   Component Default Config User Config Notes      i3-gaps /etc/regolith/i3/config ~/.config/regolith/i3/config In Regolith versions prior to 1.2 this file was in another directory.    Xresources /etc/regolith/styles/root ~/.Xresources-regolith ~/.Xresources is also loaded but intended for properties that may also be required in other desktop sessions.    Rofi /etc/regolith/styles/cahuella/rofi.rasi Defined in the theme style file. This can also be overridden directly in the i3 file if preferred.    Bar Workspace Labels /etc/regolith/styles/i3-wm User defined     Bar status indicators /etc/regolith/i3xrocks/config User defined (i3 config)      Load Sequence Upon session start, Regolith loads configuration files in the following order:\n /usr/bin/i3-gnome-flashback executes after successful login Load Xresource file ~/.Xresources if it exists. Load Xresource file ~/.Xresources-regolith if it exists. If first time session has loaded, initialize system. Compare current Xresource db against last saved hash, if different, reload GNOME settings from Xresources. Execute i3 with first config file found from following list: ~/.config/regolith/i3/confg, /etc/regolith/i3/config, /etc/i3/config. i3 executes the UI components Rofi, i3xrocks, unclutter, regolith-compositor, Rofication, and regolith-ftue.  ","excerpt":"Component Default Config User Config Notes      i3-gaps /etc/regolith/i3/config …","ref":"http://regolith-linux.org/regolith-site-r13/docs/reference/configurations/","title":"Config Files"},{"body":"This section contains the information necessary to get Regolith running on a computer. There are two primary ways of installing Regolith; via an Ubuntu-based installer and via a Personal Package Archive (PPA). Either of these methods will result in essentially the same user experience, although installing via the Ubuntu installer will result in a package selection that is different from installing vanilla Ubuntu. However by adding and removing specific packages a vanilla Ubuntu system can be configured.\nPrerequisites Ubuntu Installer  A modern computer that can boot from a USB flash drive. Free space on a local drive. The installer will allow for managing existing partitions or installing on an empty volume. An internet connection to install updates during and after installation. A monitor with at least VGA (1024 x 768) resolution. Regolith is optimized for FHD (1920 x 1080) screens. An empty USB flash drive with at least 4 Gb of storage space.  PPA  An existing Ubuntu installation with admin rights, version 18.04 or 19.04. 100Mb of free storage space to install the Regolith desktop environment. An internet connection to install updates during and after installation.  Deciding on Installation Method If you already have an Ubuntu system of a supported version, than adding Regolith via PPA is the faster and less disruptive method. The Ubuntu installer method is better for starting from scratch, installing into a virtual machine, or just ensuring that any existing software is not conflicting with Regolith. Some users have had some issues with getting Regolith to work properly with other Ubuntu derivative desktop environments. Installing a fresh instance can sidestep these potential issues.\n","excerpt":"This section contains the information necessary to get Regolith running on a computer. There are two …","ref":"http://regolith-linux.org/regolith-site-r13/docs/getting-started/","title":"Getting Started"},{"body":"Regolith 1.3 introduces the integration of Rofication into the environment. Previous versions relied on a built-in notification system within gnome-flashback but the UI was distracting. Rofication relies on a notification daemon and Rofi-based front end. A block in the bar shows the number of notifications the user has. When a new notification is received, this number is incremented by one. There is no other alert or other UI that would notify the user of the new message. If a more agressive notification UI is desired, dunst is recommended.\nManaging Notifications Next to the bell icon in the bar is the current number of notifications. To view and delete them, select super n and a menu will load. Notifications can be read and then deleted with delete and the notification window can be dismissed with escape. All low-priority notifications can be deleted at once with shift delete from within the notification menu.\n","excerpt":"Regolith 1.3 introduces the integration of Rofication into the environment. Previous versions relied …","ref":"http://regolith-linux.org/regolith-site-r13/docs/interface/notifications/","title":"Notifications"},{"body":"   Package Description     regolith-assets An optional package with additional wallpaper.   regolith-builder Scripts and metadata for building and hosting Regolith.   regolith-compositor-compton-glx A compositor configuration for Picom (recently renamed from Compton).   regolith-compositor-xcompmgr A compositor configuration for xcompmgr.   regolith-compositor-none A compositor configuration for no compositor.   regolith-desktop The root meta package for Regolith by which all other default packages are referenced.   regolith-gdm3-theme An optional package for an updated login screen.   regolith-gnome-flashback A customization of i3-gnome-flashback for Regolith. Session init logic lives here.   regolith-i3-gaps-config Regolith's version of the i3 config file.   regolith-i3xrocks-config Configuration for the status indicators in the bar.   regolith-linux.github.io This website.   regolith-rofication A customization of the Rofication project.   regolith-st The st-term with some patches applied.   regolith-styles Metadata that describes the UI look in Regolith.    ","excerpt":"Package Description     regolith-assets An optional package with additional wallpaper. …","ref":"http://regolith-linux.org/regolith-site-r13/docs/reference/packages/","title":"Packages"},{"body":"As stated in the repo readme, Regolith styles are a convention by which a set of files which define key/value pairs are loaded into memory and can be queried by xrdb or xrescat. Xresources employes the C preprocessor to allow for complex behaviors such as including more files, defining constants, and conditional expressions. In Regolith, only two preprocessor directives are used: #include and #define. #include statements are used to reference other files. Collections of files called looks were covered in the previous section of this guide. #define statements simply allow for a symbolic value to be replaced by a literal value, like defining a variable.\nDefines To maximize the re-use of theme information in Regolith, Xresources are divided into two categories of files: definition files and application files. The definition files make heavy use of the define directive. They essentially bind an abstract key, such as \u0026ldquo;blue\u0026rdquo; or \u0026ldquo;terminal font\u0026rdquo; to a literal value, such as #0000FF or Source Code Pro Medium. In making changes to files, it's expected that these defines will change. The user may wish to specify a different icon set, or typeface, and would do so by modifying or creating a new definition file. Once this file is created, it needs to be referenced by a top-level Xresource file in ~/Xresource-regolith.\nNote that when referencing other files in Xresources via the #include directive, shortcuts like $HOME and ~/ are not available. Absolute paths are required.\n Application Xresource files As mentioned previously, in /etc/regolith/styles lives a number of Xresources, including those for specific applications such as st or i3-wm. Opening these files will show a mapping of the abstract keys provided by the defines files to application specific keys. In this way, the general description of the look can be mapped to any UI component or application that can read from Xresources.\nLoading Order The i3-gnome-flashback session init script will check for an Xresources file in the following order:\n ~/.Xresources-regolith /etc/regolith/styles/root  In addition to a Regolith Xresources file, ~/.Xresources will also be loaded if it exists upon session start.\nReloading Xresources The xrdb command can be used to refresh Xresource values after they have changed. For example, to reload the user Xresource file run:\n$ xrdb -merge ~/.Xresources-regolith Verification You can test that a change has been made to your Xresources file by querying it from the command line. If a change was made to key foo.bar then the following command will return it's current value, or empty if unset:\n$ xrescat foo.bar empty ","excerpt":"As stated in the repo readme, Regolith styles are a convention by which a set of files which define …","ref":"http://regolith-linux.org/regolith-site-r13/docs/customize/styles/","title":"Styles"},{"body":"Configuration Files Regolith Linux is continually being updated with bug fixes and feature enhancements. Regolith's default configuration files live in /etc/regolith/. To customize these files, make copies in your user directory and make changes there. These copied files in the user directory are owned by the user and will not be modified by Regolith.\nPackage Updates Notification of upcoming updates including those that may introduce breaking changes will be announced on the Regolith Linux Announcements mailing list. Whenever possible, breaking changes will be confined to major version releases of Regolith.\nOnce a package has been published to the release PPA, Ubuntu's built-in package update facility will find the update and either directly apply it or ask the user if they wish to do so, depending on configuration.\nPackage Promotion Development of Regolith happens via updates to source code kept in git repos within the GitHub Regolith Organization. When a given feature or fix is ready for testing, it is published to the unstable PPA. After the change has been verified to work and not cause other problems, it is promoted to the stable PPA. Changes being preceived as high-risk will spend some additional time in stable. If a change is a feature, it will stay in stable until the next version release, but if the change is a bug fix, it will be promoted to the release and r1.3 PPAs.\n","excerpt":"Configuration Files Regolith Linux is continually being updated with bug fixes and feature …","ref":"http://regolith-linux.org/regolith-site-r13/docs/policy-and-process/updates/","title":"Updates"},{"body":"The default terminal that ships with Regolith, st-term, is a minimal terminal application. There are others that offer more features. To update Regolith to use your (already installed) terminal of choice, we just need to update the i3 config file. In this example we'll use gnome-terminal but substitute your term command as needed.\n Stage your own i3 config file (tutorial), then open ~/.config/regolith/i3/config in your editor of choice. Remap the i3-wm config to launch gnome-terminal instead of st by editing ~/.config/regolith/i3/config and changing the following line: From: bindsym $mod+Return exec st To: bindsym $mod+Return exec gnome-terminal Save the file and exit the editor. If you've just staged your i3 config file, you'll need to log back in to have the changes take effect. This only needs to happen once though, and so if you've already made a copy previously and logged in since, just reload i3 with ⊞ Win-shift-r. (Optional) Update your system to default to your terminal of choice by running sudo update-alternatives --config x-terminal-emulator (See this page for more details)  ","excerpt":"The default terminal that ships with Regolith, st-term, is a minimal terminal application. There are …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/change-terminal/","title":"Change the default terminal"},{"body":" Pay special attention to this section if you are experiencing odd visual glitches or slow graphics performance.\n As mentioned previously, a compositor is a UI component that visual effects to windows before they are rendered on-screen. Many desktop environments integrate a compositor directly into the window manager, making it difficult to switch out or disable. In Regolith, the compositor is defined as a pluggable \u0026ldquo;extension point\u0026rdquo; in the packaging system. This means that compositors can be switched out simply by installing the packages that contain them. The underlying packaging system will ensure there are no conflicts and that all the dependencies of a given compositor are also installed.\nFinding Available Compositors The following command will list all compositors configured to work with Regolith:\napt list | grep regolith-compositor- At least the following three compositors should be available:\n   Package Name Backend Description     regolith-compositor-compton-glx Compton The default compositor for Regolith. This compositor is modern, maintained, and handles screen tearing.   regolith-compositor-xcompmgr xcompmgr An early compositor that may offer more consistent performance if compton-glx is promblematic   regolith-compositor-none  A no-op package that does not run a Compositor. Best for absolute UI performance, at the cost of visual effects.    Installing a Compositor Run the following package install command to swap out the compositor. In this case we'll run xcompmgr:\n$ apt install regolith-compositor-xcompmgr Log back in and the new compositor should be loaded. You can verify by checking the process list for xcompmgr:\n$ ps aux | grep xcompmgr ","excerpt":"Pay special attention to this section if you are experiencing odd visual glitches or slow graphics …","ref":"http://regolith-linux.org/regolith-site-r13/docs/customize/compositors/","title":"Compositors"},{"body":"As an open source project, Regolith is open to anyone to extend, fork, or modify as they see fit. Additionally, we welcome people to join as contributors to the project. If you already have something in mind, please file an issue describing the change you're planning to make to Regolith, or discuss in the Slack channel. This ensures work isn't duplicated or effort wasted. If you're interested in seeing what work is available to start with, take a look at the list of issues looking for help to see what is needed. To get a picture of the future, check the roadmap. Regolith is a young project with much potential for improvement!\nFinancial Support As of the 1.3 release, Regolith has joined Open Collective as a way of receiving financial contributions from users. Financial contributions are vital to pay for infrastructure costs and fund future development of both Regolith itself as well as the upstream components that Regolith is composed of. Go here to contribute to Regolith.\nJoin our Slack channel Click this link to join our Slack channel, which allows you to communicate with the developers of Regolith and other users. Here is where we brainstorm about new features, ways to improve current features, and fix bugs.\nTesting Fixes and Features When bugs are reported by users, we try to have them verify the fix before enabling the update for everyone. Switching to the unstable PPA is necessary for Ubuntu to see that a new version of a package is available for testing a new fix or feature. Once the update has been verified to resolve the problem and not cause any other bugs, it is promoted to the stable PPA for general consumption by Regolith users. See this section for more details on package promotion, and see this section to learn how to switch between PPAs.\nSwitching between PPAs When bugs are reported by users, we try to have them verify the fix before enabling the update for everyone. Switching to the unstable PPA is necessary for testing a new fix or feature before it becomes available to the general population via an automatic update. See this section for more details on package promotion.\nOfficial Regolith Contributors Those that have shown aptitude and desire to help others, fix bugs, or add features to Regolith may be invited to become an official contributor. Official contributors have more abilities with Regolith source repos and have a high level of trust and agency.\nTasks Regolith is a volunteer effort, and so there are no specific expectations regarding how much or in what way people contribute. However here are some tasks that are of great help to the project:\n Groom GitHub issues. If an issue is pending a response from a user and there is no response from the issue creator, close it. If an issue has been resolved but not closed, also close it. To learn about and contribute to the future roadmap, see here for project planning. As a young project, there are a lot of rough edges so if you want to work in fixes that's great but also if you're interested in new features that's fine too. Help with release planning. We try for a release every 3 - 4 months. Besides feature development and bug fixes, documentation and testing are needed. For new features, it is recommended to create a \u0026ldquo;request for comment\u0026rdquo; issue (example) and allow some time for user feedback. These RfCs will be advertised via the mailing list and official Twitter account.  ","excerpt":"As an open source project, Regolith is open to anyone to extend, fork, or modify as they see fit. …","ref":"http://regolith-linux.org/regolith-site-r13/docs/policy-and-process/contributions/","title":"Contribute"},{"body":"The Regolith UI is composed of the following open source projects, and their respective transitive dependencies:\n Xorg X display server i3-gaps window manager Rofi application launcher i3bar bar i3xrocks bar script scheduler, based on i3blocks Rofication notification system Remontoire shortcut window gdm3 desktop session manager gnome-flashback GNOME session manager  ","excerpt":"The Regolith UI is composed of the following open source projects, and their respective transitive …","ref":"http://regolith-linux.org/regolith-site-r13/docs/interface/","title":"The Interface"},{"body":"Regolith Linux is an open source project created and maintained by volunteers. At this time there is no method for getting paid support. GitHub issues and the Slack channel are recommended ways of finding fixes or asking questions.\n","excerpt":"Regolith Linux is an open source project created and maintained by volunteers. At this time there is …","ref":"http://regolith-linux.org/regolith-site-r13/docs/policy-and-process/support/","title":"Support"},{"body":"Out of the box the primary battery status will be displayed in the i3-bar. For some laptops that has multiple batteries e.g. ThinkPad, you want to have both batteries displayed. To do so, follow the steps:\n Stage your own i3 config file (tutorial), then open ~/.config/regolith/i3xrocks/config in your editor of choice. Find the line that pertains to the battery blocklet:  ... # Battery indicator # # Displays total percentage charge left of specified battery. [battery3] interval=30 # instance=BAT0 List all the battery instances running on your machine by running:  ls /sys/class/power_supply/ # AC BAT0 BAT1 Update the staged config file to have a new blocklet as such:  ... # Battery indicator # # Displays total percentage charge left of specified battery. [battery3] interval=30 instance=BAT0 [battery3] interval=30 instance=BAT1 ","excerpt":"Out of the box the primary battery status will be displayed in the i3-bar. For some laptops that has …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/multiple-batteries/","title":"Support multiple batteries"},{"body":"GNOME control center (also known as Settings). A key difference between Regolith and other environments described as minimal is the integration of the GNOME settings backend. This provides a well-tested, consistent, and friendly way of configuring your environment and computer. To load the settings app, launch \u0026ldquo;Settings\u0026rdquo; from Rofi or press super c.\nSettings is a special app in Regolith in that it is launched in floating mode. This is because typically when loading settings a user is looking to make a specific change and then exit back to their work. Once loaded use the tab sections on the left of the window to select which item you wish to configure.\ni3-wm The i3 window manager is not part of GNOME and so it's configuration is not viewable or changable from the GNOME control center. Rather, the user must edit the config file and reload i3 to make changes. In Regolith, the i3 config file is at /etc/regolith/i3/config and users can supply their own copy that will override this default if placed at ~/.config/regolith/i3/config.\nMany things about Regolith can be configured in the i3 config file. It is best to read the i3 user guide to understand what and how to modify this file.\ni3bar The i3bar configuration is defined in the i3 config file listed directly above, but the i3bar has it's own configuration for status items. To change which information is displayed in the bar, the default file is /etc/regolith/i3xrocks/config and can be overridden by the user by specifying a new path in the i3 config file, as described above.\nMost status elements in the bar are configured to launch an app upon click that is associated with the data presented by the element. For example the date/time element will launch the time settings panel in gnome-control-panel. These scripts live in /usr/share/i3xrocks and can be configured as needed.\nLook The look of Regolith is configured via Xresources, that live in /etc/regolith/styles/. This topic is covered in detail in the Customize section of the documentation.\nSession When Regolith is initially loaded, a script is run that configures the system and launches i3-wm. While it is not recommended to modify this script, it can provide details about how Regolith is structured and what policy it implements when loading configuration. This file is readable at /usr/bin/i3-gnome-flashback. In fact, this script could be considered the initial seed of the Regolith project and was taken from the i3-gnome-flashback project.\n","excerpt":"GNOME control center (also known as Settings). A key difference between Regolith and other …","ref":"http://regolith-linux.org/regolith-site-r13/docs/interface/system/","title":"System Configuration"},{"body":"i3bar The bar's visibility can be toggled with super i. This can be useful when wanting to remove all distractions and devote 100% of the screen to one or more applications in your workspace. Another way of giving one application complete use of the screen is to press super f to cause the active application to enter full screen mode.\ni3-wm Layout Mode i3-wm offers a few different layout modes. super t can be used to toggle between tabbed, horizontal and vertical split modes.\nSave and Restore Window Positions A tool to save and load window layouts, i3-snapshot is integrated into Regolith 1.3. Pressing super , will write the current window layout to a file in the /tmp directory. super , will restore that layout. i3-snapshot is intended for use-cases in which monitor changes may cause layouts to be randomized. It is not a replacement for i3-save-tree as it uses window identifiers that do not survive across X sessions, nor does it offer a way of positioning application launches into specific layouts.\n","excerpt":"i3bar The bar's visibility can be toggled with super i. This can be useful when wanting to remove …","ref":"http://regolith-linux.org/regolith-site-r13/docs/interface/advanced/","title":"Advanced"},{"body":"You may prefer a different date/time format than what's set by default. This tutorial requires us to make a single change to the Xresource file that defines the date format used in the bar. The date is generated by the date command, and the formatting options are documented here.\n Stage your own Xresource file (tutorial), then open ~/.Xresources-regolith in your editor of choice. The file should contain a single line which is an #include to another Xresource file. Let's copy the contents of that referenced file into our Xresource file rather than having the include. To do this, exit out of the editor and run cp /etc/regolith/styles/cahuella/root ~/.Xresources-regolith Ok, now back in editing the file, it should look something like this:  ! -- Styles - Colors #include \u0026quot;/etc/regolith/styles/cahuella/color\u0026quot; ! -- Styles - Fonts #include \u0026quot;/etc/regolith/styles/cahuella/typeface\u0026quot; ! -- Styles - Theme #include \u0026quot;/etc/regolith/styles/cahuella/theme\u0026quot; ! -- Applications ! These files map values defined above into specific app settings. #include \u0026quot;/etc/regolith/styles/st-term\u0026quot; #include \u0026quot;/etc/regolith/styles/i3-wm\u0026quot; #include \u0026quot;/etc/regolith/styles/i3xrocks\u0026quot; #include \u0026quot;/etc/regolith/styles/rofi\u0026quot; #include \u0026quot;/etc/regolith/styles/gnome\u0026quot; The setting we need to change is set in /etc/regolith/styles/i3xrocks. Let's create our own copy of that and reference it from our Xresource file. You'll need to specify the path to the file explicitly, and cannot use $HOME or ~/ as a shortcut. First, update the line in your open editor to point to a file we haven't created yet:  #include \u0026quot;/etc/regolith/styles/i3xrocks\u0026quot; \u0026hellip;should be changed to:\n#include \u0026quot;/home/[YOUR USER NAME]/.Xresources-i3xrocks\u0026quot; Now lets create that file:  $ cp /etc/regolith/styles/i3xrocks ~/.Xresources-i3xrocks Finally, we can edit the file to change the date format. Load ~/.Xresources-i3xrocks into a text editor, and change:  i3xrocks.date.format: + %m/%d %I:%M %p \u0026hellip;to your preferred date format, or this for just the time:\ni3xrocks.date.format: + %I:%M %p Verification After saving the file, you can run regolith-look refresh or xrdb -merge ~/.Xresources-regolith for the changes to take effect. You can verify that the setting was changed by checking the value on the command line:\n$ xrescat i3xrocks.date.format ","excerpt":"You may prefer a different date/time format than what's set by default. This tutorial requires us to …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/time-format/","title":"Change the bar date/time format"},{"body":"As previously mentioned, Regolith is a collection of existing open source components that are integrated into a desktop environment. Due to standards regarding the way UI components should communicate and years of integration between components, for the most part is simple to swap out parts of the UI for others.\nThe following table lists each UI component and notes regarding it's mutability:\n   UI Component Alternatives Swappable     Xorg Unknown Unknown   i3-gaps i3-wm, others Difficult but possible   i3bar Polybar, lemonbar, many others. Yes, the i3 config file is changed to load a different bar.   i3xrocks i3blocks, barista, many others. Yes, the i3 config file is changed to load a different status program.   Rofication Dunst, gnome-flashback Yes, the i3 config file is configured to load the Notification backend and Rofi UI, and i3xrocks is configured to load the blocklet.   Remontoire Conky Yes, the i3 config file is changed to load a different help program.   gdm3 lightdm, sddm, xdm, others. This is configured in Ubuntu. Installing an alternative session manager should present a prompt to specify which to use.   gnome-flashback None No    Due to the breadth of the topic, more details are not available here. Experimenting with different UI components is a fun way to learn more about the internals of the operating system. It is recommended to first experiment in a VM running Regolith to avoid breaking your working environment.\n","excerpt":"As previously mentioned, Regolith is a collection of existing open source components that are …","ref":"http://regolith-linux.org/regolith-site-r13/docs/customize/components/","title":"Components"},{"body":"Regolith, as a set of components, lacks a uniform configuration file, format, or set of conventions. However efforts have been made to create as much consistency as possible by utilizing a simple session-wide key-value configuration facility known as Xresources. Interface preferences such as colors and typeface are defined in Xresource files and then read by components such as st-term and i3-wm. For the most part, Xresources can be used for higher level changes. Lower level changes, for example swap out i3bar for polybar, or drun for Rofi, require more fundamental changes.\nIn addition to the content in this section, refer to the tutorials for step-by-step examples of how to customize Regolith.\n Look The highest level change in the way Regolith looks is called a \u0026ldquo;look\u0026rdquo;. This ties together color, typeface, GTK theme and icons into a packagable unit known as a look. A few looks ship in the Regolith PPA, the default for R1.3 being called Cahuella.\nStyles Regolith looks are a collection of style definitions that are bundled together as a cohesive whole. But, what if you want to mix and match from different looks or make small tweaks to an existing look? Well, the Xresource files that define the looks can be modified directly. For example, to continue to use the Cahuella look but change the default font from Source Code Pro to, say Ubuntu Mono, one would just need to modify the typeface Xresource file to specify the new font (assuming it's already installed on the system).\nCompositors A compositor is a desktop component that provides visual effects to windows. While not necessary for a desktop to function, they provide some hints to the user regarding the focused application, transitions, and other effects. The performance and behavior of compositors can vary depending on graphics hardware and driver configurations. Due to this, special attention was made such that they can be easily swapped based on the users needs.\nComponents A deeper level of customization is to change which components are loaded and used. This is an advanced topic and requires both some courage to deal with the unexpected as well as general technical knowledge and some patience.\nPackages Regolith is ultimately a set of Debian packages that exist as collections of files on the user's computer. Packages can be created and hosted by anyone willing and able to create a launchpad account and some skills with packaging. This section covers the details of Regolith's package structure and tips on creating your own.\n","excerpt":"Regolith, as a set of components, lacks a uniform configuration file, format, or set of conventions. …","ref":"http://regolith-linux.org/regolith-site-r13/docs/customize/","title":"Customize"},{"body":"Introduction The open source component Regolith uses to manage the status components (known as \u0026lsquo;blocklets\u0026rsquo;) on the bar (except for the workspace indicator), is a minor fork of i3blocks called i3xrocks. i3xrocks is backward compatible and only adds the ability to read from Xresources. To make changes to which components are visibile on the bar and how often they refresh, the i3xrocks config file needs to be updated. The default file is /etc/regolith/i3xrocks/config, however it is not recommended to make edits to files in the /etc directory as any changes you make may be overwritten by future system updates. Rather, it's recommended to copy the file to your user directory and then change the containing configuration to point to your user copy. In order to do this in Regolith, the containing config file is i3's config. You'll notice the following line in /etc/regolith/i3/config:\nset $i3xrocks_config /etc/regolith/i3xrocks/config Steps  Copy the i3xrocks config file into your user directory, say ~/.config/regolith/i3xrocks.config. Stage your own i3 config file (tutorial), then open ~/.config/regolith/i3/config in your editor of choice. Edit the line that sets the i3xrocks_config variable to point to your new config file:  set $i3xrocks_config /home/\u0026lt;username\u0026gt;/.config/regolith/i3xrocks.config Now let's edit ~/.config/regolith/i3xrocks.config. You'll notice sections are commented out, such as a memory section. Enable the memory blocklet:  # Memory # [memory] interval=10 After saving the file, you will need to log out and back in, or if you've already staged your i3 config file in a previous desktop session, you can simply reload the i3 config for the change to take effect. After the reset, you should notice a new blocklet in the bar displaying free memory of your system. Learn more about the blockets here.  Add Blocks The blocklets that ship with Regolith reside at /usr/share/i3xrocks. They are just plain scripts that can be run on the command line. They output text in pango format, which is interpreted by i3bar for rendering. Any blocklet script made for i3blocks should also work with i3xrocks, but keep in mind that Regolith has specific layout and textual formatting that general blocks will not have by default.\nRefer to the i3blocks documentation to add more blocklets to your bar.\n","excerpt":"Introduction The open source component Regolith uses to manage the status components (known as …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/add-remove-blocklets/","title":"Change bar status indicators"},{"body":"The following graph generated by debtree provides the dependency relationships of Regolith packages and some of their notable upstream dependencies:\nSource Packages Regolith's packages are hosted on PPAs provided by launchpad.net:\n   PPA Description Launchpad URL     ppa:regolith-linux/unstable Packages staged for developer testing. https://launchpad.net/~regolith-linux/+archive/ubuntu/unstable   ppa:regolith-linux/stable Packages that have been tested but have not been committed to a release. https://launchpad.net/~regolith-linux/+archive/ubuntu/stable   ppa:regolith-linux/release Packages as provided by the current Regolith release https://launchpad.net/~regolith-linux/+archive/ubuntu/release   ppa:kgilmer/speed-ricer General purpose packages that Regolith depends on that are not currently available via Ubuntu's repos. https://launchpad.net/~kgilmer/+archive/ubuntu/speed-ricer    Git Repositories The source code associated with Regolith packages is hosted on Regolith Linux's GitHub organization.\nInstaller ISOs The installer is produced using the Cubic tool and providing the target ISO files as manual uploads to the Regolith Linux GitHub org. The README in regolith-cubic-conf has more details.\nBuild Regolith packages can be built, signed, and staged from the regolith-builder repository. See the project's README for details.\nPackage Δ between Stock Ubuntu and Regolith Linux When installing Regolith via PPA, the user has control and visibility over all package changes via their package installation tool of choice, likely apt, dpkg, or synaptic. However when installing Regolith via the Ubuntu Installer, the user does not see what packages are installed as part of that process. To cut down the size of the installer download, some packages were removed from the Ubuntu installer.\nRegolith 1.2 For Regolith 1.2, the following packages are removed from stock Ubuntu:\n ubuntu-session libreoffice-* rythmbox-*  Of course, any of these packages can be re-added by the user after installation using a variety of tools including the app store.\nRegolith 1.3 For the 1.3 release of Regolith, changes from baseline Ubuntu are documented here.\n","excerpt":"The following graph generated by debtree provides the dependency relationships of Regolith packages …","ref":"http://regolith-linux.org/regolith-site-r13/docs/customize/packages/","title":"Packages"},{"body":"Remove everything but the workspace number Follow these steps to edit the Xresource definitions of the workspace labels used by i3:\n Stage your Regolith Styles Xresources files, as described here. Stage the /etc/regolith/styles/i3-wm Xresource file in your user directory, and ensure that your user copy of the Xresource file #includes this copy. Edit your copy of the i3-wm styles file. This file uses C-style macros to generate the Pango markup for each workspace label. There are various ways of changing the macros to strip out the icons, but this may be the most concise. Replace:  #define WORKSPACE_NAME(INDEX, FONT, COLOR, GLYPH) INDEX:\u0026lt;span font_desc=FONT\u0026gt; INDEX \u0026lt;/span\u0026gt;\u0026lt;span foreground=COLOR\u0026gt;GLYPH\u0026lt;/span\u0026gt; with:\n#define WORKSPACE_NAME(INDEX, FONT, COLOR, GLYPH) After saving this file log out and back in to see the change.  Creating workspace labels Some users prefer to title their workspaces based a theme, such as terminal, web, etc. To do this, make modifications to your user copy of /etc/regolith/styles/i3-wm similarly to:\ni3-wm.workspace.01.name: Terminal i3-wm.workspace.02.name: Web i3-wm.workspace.03.name: Chat ","excerpt":"Remove everything but the workspace number Follow these steps to edit the Xresource definitions of …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/remove-workspace-icons/","title":"Change workspace labels"},{"body":" More examples and tutorials are available in the Regolith Desktop wiki on GitHub.\n Using the Terminal This section provides examples of how to change Regolith to suit your needs. Most of them will specify commands to be run in the terminal. If using the terminal is new to you or you'd just like to refresh your memory, this guide from Ubuntu is recommended. Another tutorial from linuxcommand.org goes into some more advanced territory.\ni3-wm User Guide In addition to general command-line abilities, having a basic understanding of what options are available in the i3 user guide is recommended to get the most out of the interface.\n","excerpt":"More examples and tutorials are available in the Regolith Desktop wiki on GitHub.\n Using the …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/","title":"How To"},{"body":"This page describes how to configure the package system to consume Regolith packages between a set of PPAs.\nRegolith PPAs See this section for a description of each PPA. By default users will be on the release PPA which is intended to only be updated upon bug fixes and versioned releases. Here is how to switch to the unstable PPA, by updating the apt packaging configuration:\n Remove the existing release PPA:  $ sudo add-apt-repository --remove ppa:regolith-linux/release Add the new unstable PPA:  $ sudo add-apt-repository ppa:regolith-linux/unstable $ sudo apt update Upgrade packages to the upgraded versions contained in the new PPA:  $ sudo apt upgrade Switch Back To return to the previon configuration, simply follow the steps above but toggle the PPA URIs. So, swap unstable for release.\nOnce the PPAs have been switched, to revert any unwanted package updates from the unstable repository, simply install the specific version you wish to revert to. For example, if regolith-deskop has version 4 in unstable and version 3 in release, you would have been upgraded to version 4 after using the unstable PPA and taking updates. To revert back to version 3 after swapping back to the release PPA, tell apt the specific version you wish to install:\n$ sudo apt install regolith-desktop=3 The general form is apt install \u0026lt;package name\u0026gt;=\u0026lt;package version\u0026gt;. You will be notified by apt that the operation will result in a downgrade package version.\n","excerpt":"This page describes how to configure the package system to consume Regolith packages between a set …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/change-ppa/","title":"Switch between Regolith PPAs"},{"body":"This section contains reference material that may help you with Regolith.\n","excerpt":"This section contains reference material that may help you with Regolith.","ref":"http://regolith-linux.org/regolith-site-r13/docs/reference/","title":"Reference"},{"body":"Release notes and other version-specific content can be found here.\n","excerpt":"Release notes and other version-specific content can be found here.","ref":"http://regolith-linux.org/regolith-site-r13/docs/reference/releases/","title":"Releases"},{"body":" This tutorial assumes the usage of the default Regolith look cahuella. If you've updated to something else, substitute that look's name for cahuella below.\n You may prefer a different font size in the terminal than what's set by default. This tutorial requires us to make a single change to the Xresource file that defines the font used in st-term, the default terminal used by Regolith.\n Stage your own Xresource file (tutorial), then open ~/.Xresources-regolith in your editor of choice. The file should contain a single line which is an #include to another Xresource file. Let's copy the contents of that referenced file into our Xresource file rather than having the include. To do this, exit out of the editor and run cp /etc/regolith/styles/cahuella/root ~/.Xresources-regolith Ok, now back in editing the file, it should look something like this:  ! -- Styles - Colors #include \u0026quot;/etc/regolith/styles/cahuella/color\u0026quot; ! -- Styles - Fonts #include \u0026quot;/etc/regolith/styles/cahuella/typeface\u0026quot; ! -- Styles - Theme #include \u0026quot;/etc/regolith/styles/cahuella/theme\u0026quot; ! -- Applications ! These files map values defined above into specific app settings. #include \u0026quot;/etc/regolith/styles/st-term\u0026quot; #include \u0026quot;/etc/regolith/styles/i3-wm\u0026quot; #include \u0026quot;/etc/regolith/styles/i3xrocks\u0026quot; #include \u0026quot;/etc/regolith/styles/rofi\u0026quot; #include \u0026quot;/etc/regolith/styles/gnome\u0026quot; The setting we need to change is set in /etc/regolith/styles/cahuella/typeface. Let's create our own copy of that and reference it from our Xresource file. You'll need to specify the path to the file explicitly, and cannot use $HOME or ~/ as a shortcut. First, update the line in your open editor to point to a file we haven't created yet:  #include \u0026quot;/etc/regolith/styles/cahuella/typeface\u0026quot; \u0026hellip;should be changed to:\n#include \u0026quot;/home/[YOUR USER NAME]/.Xresources-typeface\u0026quot; Now lets create that file:  $ cp /etc/regolith/styles/cahuella/typeface ~/.Xresources-typeface Finally, we can edit the file to change the font specification. Load ~/.Xresources-typeface into a text editor, and change:  #define typeface_terminal Source Code Pro:pixelsize=16:antialias=true:autohint=true \u0026hellip;to your preferred font specification, or this for testing:\n#define typeface_terminal Source Code Pro:pixelsize=24:antialias=true:autohint=true Verification After saving the file, you can run regolith-look refresh or xrdb -merge ~/.Xresources-regolith for the changes to take effect. If you launch a new terminal, your updated font specification should be in effect. You can verify that the setting was changed by checking the value on the command line:\n$ xrescat St.font ","excerpt":"This tutorial assumes the usage of the default Regolith look cahuella. If you've updated to …","ref":"http://regolith-linux.org/regolith-site-r13/docs/howto/terminal-font/","title":"Change the terminal font size"},{"body":"This site contains the information to use the Regolith desktop environment. The content is structured in an order intended for new users, but feel free to skip around as you see fit. Feedback is always welcome and we appreciate any tips on how the documentation can be more complete, easy to read, and effective.\nTerms Before diving in it's good to define some terms to avoid confusion.\n   Term Description     Keybinding A mapping between a set of key presses to a specific action performed by the desktop environment or application.   Desktop Environment A collection of software programs that used as a whole allow a user to interact with a computer using a keyboard, mouse, and monitor.   Bar A passive UI component typically placed at the top or bottom of the screen used to provide system information to the user.   Launcher An active UI component a user will invoke to perform an action, such as navigate to a window or launch a program.   Workspace A collection of windows all present together on the same computer monitor.   Window A program presents a graphical interface to users via windows. Some programs are text based and do not create windows of their own.   Window Manager A program that organizes windows on behalf of the user.   Tile Another word for a window used by tiling window managers.   Floating Window A window that does not share bounds with other windows in a workspace can be placed on top of them. This is the default layout for traditional window managers.    Table of Contents ","excerpt":"This site contains the information to use the Regolith desktop environment. The content is …","ref":"http://regolith-linux.org/regolith-site-r13/docs/","title":"Documentation"},{"body":" Get Regolith Regolith is available as a stand-alone ISO that can be installed as a complete Linux operating system and as a \"personal package archive\" (PPA) that installs the Regolith desktop into an existing Ubuntu 18.04 or 19.10 system.\n      Regolith Linux ISO Installer Starting from scratch or simply want to try Regolith out in a VM or LiveUSB environment? Download the ISO  and write it to a USB flash drive to install or test drive Regolith as an operating system. To learn how, visit the Ubuntu installer tutorial. This ISO is a customization of the Ubuntu installer from Canonical, with some optional packages removed and Regolith packages added.\nDownload …\n   Regolith Desktop PPA Add the Regolith PPA to your existing Ubuntu system and install the regolith-desktop package with the following terminal commands:\n$ sudo add-apt-repository ppa:regolith-linux/release $ sudo apt install regolith-desktop After installation, Regolith will appear as a desktop session on the login screen. Learn more about adding PPAs here.    Upgrade from earlier version To upgrade your existing 1.1 or 1.2 version of Regolith to 1.3, simply move to the new PPA and perform a dist-upgrade:\n$ sudo add-apt-repository --remove ppa:kgilmer/regolith-stable $ sudo add-apt-repository ppa:regolith-linux/release $ sudo apt dist-upgrade  If you have made customizations to i3wm or your styles, it's recommended to use the defaults upon login and then manually integrate your changes back in. To ensure that the defaults are loaded, move your changes and then log back in.\n$ mv ~/.config/regolith ~/old-regolith-config $ mv ~/.Xresources-regolith ~/old-regolith-styles $ # now log back in     Remove Regolith Desktop If you decide Regolith isn't what you're looking for, restore your previous GNOME settings and completely remove Regolith by logging in to the standard Ubuntu session and executing the following commands from a terminal:$ sudo add-apt-repository \u0026ndash;remove ppa:regolith-linux/release $ sudo apt remove regolith-* $ sudo apt autoremove $ source ~/.regolith-gnome-backup $ rm -Rf ~/.regolith-gnome-backup ~/.config/regolith \n   Earlier Releases While Regolith is a young project, it already has a few releases behind it. You can find earlier ISO installer releases on SourceForge.net.\n   More Help Care for more details? Another version of these installation instructions are available in the user documentation.\n    ","excerpt":"Get Regolith Regolith is available as a stand-alone ISO that can be installed as a complete Linux …","ref":"http://regolith-linux.org/regolith-site-r13/download/","title":"Download"},{"body":"","excerpt":"","ref":"http://regolith-linux.org/regolith-site-r13/index.json","title":""},{"body":"    Issues Looking for Help If you'd like to get involved with the development of Regolith, have a look at this list of issues that need help. For any issue that lacks detail or is otherwise ambiguous, just comment in the issue with questions and we'll do what we can to fill in the gaps.\nIssues …\n   Future Projects To get a sense of where we are headed, checkout the upcoming projects on GitHub.\nOpen Projects …\n    ","excerpt":"Issues Looking for Help If you'd like to get involved with the development of Regolith, have a look …","ref":"http://regolith-linux.org/regolith-site-r13/interact/","title":"Interact"},{"body":"","excerpt":"","ref":"http://regolith-linux.org/regolith-site-r13/docs/policy-and-process/","title":"Policy and Process"},{"body":"  #td-cover-block-0 { background-image: url(/regolith-site-r13/feature-background_hu3d03a01dcc18bc5be0e67db3d8d209a6_1662351_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/regolith-site-r13/feature-background_hu3d03a01dcc18bc5be0e67db3d8d209a6_1662351_1920x1080_fill_q75_catmullrom_top.jpg); } }   Regolith is a modern desktop environment that saves you time by reducing the clutter and ceremony that stand between you and your work. Built on top of Ubuntu and GNOME, Regolith stands on a well-supported and consistent foundation.\n  Get Regolith   Learn More   Contribute     \n       Upon first login, an overlay (toggled anytime via super ?) presents the most important keybindings used with i3-wm.\n      For those that work in the terminal, pressing super enter is all it takes to get to business.\n  A single global app launcher is instantly available from anywhere to run your programs via super space.\n      Need more terminals? Create layouts on the fly by toggling between horizontal and vertical modes with super backspace followed by super enter. Navigate to windows positionally with super h j k l.\n  Toggle floating window mode with super F. Resize windows with super r and move them around with the mouse by pressing super.\n      Gnome Flashback provides consistent and simple system management. Tweak your UI, auto mount your USB drives, connect to wireless networks. Launch the control panel with super c.\n  Easily switch to Solarized or other looks with the regolith-look command. Because looks utilize the package manager, you only store theme resources that you're using.\n      Launch Transmission via the app launcher super space and manage files with Nautilus super N.\n  Got a lot going on? Quickly find the window you're looking for via super ctrl space or navigate over workspaces with super [0 - 19].\n      Waste no space on frivolous UI and take advantage of every pixel without micro-managing your window layouts.\n  Manage your notifications with an on-screen dialog by pressing super n.\n      Regolith is built on Ubuntu, providing a system that's up to date and stable.\n    What Makes Regolith Different  Delivers a desktop with a functional yet minimal user interface that can be customized and expanded as needed. Combines GNOME's system management features with i3-wm's productive workflow. Enables new users a fast and fun way to try out a tiling window manager. Supports easy customization and ricing via a consistent Xresource configuration. Relies on Ubuntu's app store and package repositories for a large, high quality selection of software. Built to be taken apart. Swap in UI components of your choosing easily. Ships with a toggle overlay of basic keybindings to make getting started easier. Provides a build script and package metadata to allow users to easily fork the desktop environment and distribution.     Thanks to\u0026hellip; Regolith is more curation than creation. Here are some of the notable people and entities that produced unaffiliated work independently from which Regolith is based.  Michael Stapelberg and Ingo Bürk Desktop UI  Dave Davenport Desktop UI  yshui Desktop UI  Alberts Muktupāvels Desktop UI  Jesús Castro and Alex Palaistras Desktop UI  Vivien Didelot Desktop UI  Arctic Ice Studio and Ethan Schoonover Colors  Alastair Reynolds Proper Nouns  Eliver Lara Theme  Sam Hewitt Icons  suckless.org Terminal  Psiu Puxa,Lucas Bellator, and Luca Bravo Artwork  PJ Singh Infrastructure  Canonical and GitHub Infrastructure      ","excerpt":"#td-cover-block-0 { background-image: …","ref":"http://regolith-linux.org/regolith-site-r13/","title":"Regolith Linux"},{"body":"","excerpt":"","ref":"http://regolith-linux.org/regolith-site-r13/search/","title":"Search Results"}]